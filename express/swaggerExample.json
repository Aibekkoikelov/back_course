{
    // Версия свагера
    "swagger": "2.0",
    // Информация о проекте
    "info": {
         // версия проекта
        "version": "1.0.0",
            // Название проекта
        "title": "Rent Car API",
            // Описание проекта
        "description": "can be used to rent a car",
            // Контакты
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    // Базовый путь
    "host": "localhost:3000",
    // Базовый путь
    "basePath": "/",
    // Теги
    "tags": [
        {
            // Название тега
            "name": "Cars Rent",
            // Описание тега
            "description": "API for rent cars"
        }
    ],
    // Схема безопасности
    "schemes": ["http"],
    //
    "consumes": ["application/json"],
    "produces": ["application/json"],
   // Пути
    "paths": {
        // Путь для получения списка автомобилей
        "/reservation": {
            // Метод GET
            "get": {
                // Теги для групирования методов (все методы описанные одним тегом попадают в один список)
                "tags": ["Reservation"],
                // Описание метода
                "summary": "get all reservations car",
                // Описываем что делает метод для более подробного описания
                "responses": {
                    // Код ответа который вы отправляете клиенту
                    "200": {
                        // Описание ответа
                        "description": "OK",
                        // Схема ответа (описание структуры ответа)
                        "schema": {
                            // Схему ответа описываем в отдельном файле (указываем путь к схеме) он находиться ниже
                            "$ref": "#/definitions/reservation"
                        }
                    }
                }
            }
        },
        "/reservation/info": {
            "get": {
                "tags": ["Reservation"],
                "summary": "get report about reserved car in month",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/info"
                        }
                    }
                }
            }
        },
        // Путь для добавления автомобиля
        "/reservation/add": {
            // Метод POST
            "post": {
                // Теги для групирования методов (все методы описанные одним тегом попадают в один список)
                "tags": [
                    "Reservation"
                ],
                "summary": "Create new car reserv",
                "description": "Create new car reservation",
                // Описываем какие данные нужно отправить в запросе (body) То что вы отправляете в body
                "parameters": [
                    {
                        // Название данного параметра
                        "name": "reservation",
                        // Где находиться параметр (в body)
                        "in": "body",
                        // Описание параметра
                        "description": "client info",
                        // Какая схема параметра (описание структуры параметра) указываем путь к схеме
                        "schema": {
                            "$ref": "#/definitions/reservation"
                        }
                    }
                ],
                // Тип данных которые вы отправляете в ответе
                "produces": [
                    "application/json"
                ],
                // Описываем ответ который вы отправляете клиенту
                "responses": {
                    "200": {
                        "description": "New user is created",
                        "schema": {
                            "$ref": "#/definitions/reservation"
                        }
                    }
                }
            }
        },
        // Путь для получения автомобиля по id
        "/reservation/{id}": {
            // Указываем что в параметрах нужно передать id (Описываем перед описанием метода)
            "parameters": [
                {
                    // Название параметра
                    "name": "id",
                    // Где находиться параметр (в path)
                    "in": "path",
                    // Указываем что обязательно нужно передать
                    "required": true,
                    // описываем что это за параметр
                    "description": "id for check reservation car",
                    // указываем какой тип данных передавать
                    "type": "integer"
                }
            ],
            // Метод GET
            "get": {
                "tags": ["Reservation"],
                "summary": "Get all reserved car by car id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/reservation"
                        }
                    }
                }
            }
        },
        // Путь для удаления автомобиля по id
        "/reservation/delete/{id}": {
            // Указываем что в параметрах нужно передать id (Описываем перед описанием метода)
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "description": "Add id number for delete reservation",
                    "type": "integer"
                }
            ],
            // Метод DELETE
            "delete": {
                "tags": ["Reservation"],
                "summary": "Remove reservation by id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/reservation"
                        }
                    }
                }
            }
        }

    },
    // Описываем схемы которые используются в методах
    "definitions": {
        // Схума для резевации автомобиля
        "reservation": {
            // Обьект с описанием полей
            "properties": {
                // Поле id (тип данных integer)
                "_id": {
                    // Тип integer
                    "type": "integer",
                    // Уникальность
                    "uniqueItems": true
                },
                "client_id": {
                    "type": "integer"
                },
                "car_id": {
                    "type": "integer"
                },
                // Поле date (тип данных string)
                "startDate": {
                    "type": "string",
                    "description": "Start date",
                    // Пример данных
                    "example": "2017-01-01",
                    // Формат данных
                    "format": "date"
                },
                "endDate": {
                    "type": "string",
                    "description": "Start date",
                    "example": "2017-01-01",
                    "format": "date"
                }
            }
        },
        "info": {
            "properties": {
                "percent": {
                    "type": "integer"
                },
                "carId": {
                    "type": "integer"
                }

            }
        }
    }
}
